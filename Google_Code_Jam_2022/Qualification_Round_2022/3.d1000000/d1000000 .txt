Problem
While the most typical type of dice have 6 sides, each of which shows a different integer 1 through 6
, there are many games that use other types. In particular, a dk is a die with k sides, each of which shows a different integer 1 through k. A d6
is a typical die, a d4 has four sides, and a d1000000 has one million sides.

In this problem, we start with a collection of N dice. The i-th die is a dSi
, that is, it has Si sides showing integers 1
 through Si. A straight of length ℓ starting at x is the list of integers x,x+1,…,x+(ℓ−1). We want to choose some of the dice (possibly all) and pick one number from each to form a straight. What is the longest straight we can form in this way?

Input
The first line of the input gives the number of test cases, T. T test cases follow. Each test case is described in two lines. The first line of a test case contains a single integer N, the number of dice in the game. The second line contains N integers S1,S2,…,SN, each representing the number of sides of a different die.


Output
For each test case, output one line containing Case #x: y, where x is the test case number (starting from 1) and y
is the maximum number of input dice that can be put in a straight.

Sample Input
4
4
6 10 12 8
6
5 4 5 4 4 4
10
10 10 7 6 7 4 4 5 7 4
1
10

Sample Output

Case #1: 4
Case #2: 5
Case #3: 9
Case #4: 1

In Sample Case #1, there are multiple ways to form a straight using all 4 dice. One possible way is shown in the image above.

In Sample Case #2, since none of the dice can show an integer greater than 5, there is no way to have a straight with more than 5 dice. There are multiple ways to form a straight with exactly 5 dice. For example, pick the integers 4 and 5 for both d5⁠'s and then integers 1,2, and 3 for three of the d4⁠'s to form 1,2,3,4,5 

In Sample Case #3, it is possible to form the straight 1,2,3,4,5,6,7,8,9 by discarding one d4 and using the d4⁠'s, d5, and d6 to get 1 through 4; the d7⁠'s to get 5 through 7; and the d10⁠'s to get 8 and 9. There is no way to form a straight of length 10, so this is the best that can be done.

In Sample Case #4, we can only form a straight of length 1, but we can do so by picking any integer for the d10we are given.

Analysis
Test Set 1
There are multiple of ways to solve Test Set 1 of this problem. A particularly funny one is to throw the solution of an old finals problem at it (even the Test Set 1 solution of that problem works).

Test Set 2
Test Set 2 has very big numbers, so we need insights that are specific to this problem.

Insight 1. If a straight from A to B
 can be done, then one from 1 to B−A+1 can be done as well using the same dice in the same order, since a die showing a number X can always be used to show number X−A+1.

Insight 2. If a straight is done with a di showing number X and a dj showing number X+1 with i>j, we can build the same straight but using dj for X and di for X+1.
Insight 2b. Any straight that can be done, can also be done while using the dice in non-decreasing order of number of faces.
Combining insights 1 and 2b gives an algorithm: start by sorting the dice. Then, in that order, try to extend the current straight if possible. 

Or, in pseudo-code:
maximum_straight_length(S):
  sort(S)
  length = 0
  for si in S:
    if si > length: length += 1
  return length

This algorithm requires only linear time beyond sorting the input, which means O(NlogN) overall. This is fast enough to pass Test Set 2.
